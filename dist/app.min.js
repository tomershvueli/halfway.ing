class Router{constructor(){this.setupRouting()}setupRouting(){window.addEventListener("popstate",()=>{this.handleRoute()}),this.showApp()}handleRoute(){const e=window.location.pathname;console.log("Router: Current path:",e),this.showApp()}showApp(){const e=document.querySelector(".app");e&&(e.style.display="flex")}navigateTo(e){window.history.pushState({},"",e),this.handleRoute()}}class RoomManager{constructor(){this.roomId=null,this.roomData=null,this.isHost=!1,this.hostPeerId=null}initialize(){this.roomId=this.getRoomIdFromUrl()||this.generateRoomId(),this.updateUrlWithRoomId(),this.updateRoomUrlDisplay(),this.roomData={id:this.roomId,title:`Room ${this.roomId}`,hostPeerId:null,users:new Map,lastActivity:Date.now()};const e=document.getElementById("room-title-display");return e&&(e.textContent=`Room: ${this.roomData.id}`),this.roomId}getRoomIdFromUrl(){const e=window.location.pathname;if(console.log("RoomManager: Extracting room ID from path:",e),"/"===e||""===e)return null;const t=e.match(/\/([^\/]+)$/);if(t){const e=t[1];return["index.html","index.htm","app.js","styles.css","js","css"].includes(e.toLowerCase())||e.includes(".")?(console.log("RoomManager: Invalid room ID detected:",e,"generating new one"),null):(console.log("RoomManager: Valid room ID extracted:",e),e)}return null}generateRoomId(){const e=["happy","bright","cool","swift","brave","calm","clever","gentle","kind","wise"],t=["red","blue","green","yellow","purple","orange","pink","cyan","magenta","lime"],o=["cat","dog","bird","fish","bear","lion","tiger","wolf","fox","deer"];return`${e[Math.floor(Math.random()*e.length)]}-${t[Math.floor(Math.random()*t.length)]}-${o[Math.floor(Math.random()*o.length)]}`}updateUrlWithRoomId(){const e=window.location.pathname,t=`/${this.roomId}`;if(e!==t){const o=`${window.location.origin}/${this.roomId}`;console.log("RoomManager: Updating URL from",e,"to",t),window.history.replaceState({},"",o)}else console.log("RoomManager: URL already correct:",e)}updateRoomUrlDisplay(){const e=document.getElementById("room-url");e&&(e.textContent=`halfway.ing/${this.roomId}`)}updateRoomTitle(e){if(e&&""!==e.trim()){this.roomData.title=e.trim(),this.saveRoomToStorage();const t=document.getElementById("room-title-display");return t&&(t.textContent=`Room: ${e.trim()}`),e.trim()}return null}copyRoomUrl(){const e=`${window.location.origin}/${this.roomId}`;return navigator.clipboard.writeText(e)}saveRoomToStorage(e=[]){const t={id:this.roomId,title:this.roomData.title,hostPeerId:this.hostPeerId,users:Array.isArray(e)?e:Array.from(e.values?e.values():[]),lastActivity:Date.now()};localStorage.setItem(`room_${this.roomId}`,JSON.stringify(t))}loadRoomFromStorage(){const e=localStorage.getItem(`room_${this.roomId}`);return e?JSON.parse(e):null}becomeHost(e){return this.isHost=!0,this.hostPeerId=e,this.roomData.hostPeerId=e,this.saveRoomToStorage(),!0}setHost(e){this.hostPeerId=e,this.roomData.hostPeerId=e,this.isHost=e===this.getCurrentPeerId()}getCurrentPeerId(){return this._currentPeerId}setCurrentPeerId(e){this._currentPeerId=e}}class UserManager{constructor(){this.currentUser=null,this.users=new Map,this.connectionStatuses=new Map}initialize(){try{console.log("UserManager: Starting initialization...");const e=localStorage.getItem("user_name")||this.generatePseudonym();if(this.currentUser={id:this.generateUserId(),name:e,locations:[],peerId:null},!this.currentUser.id||!this.currentUser.name)throw new Error("Failed to generate user ID or name");this.users.set(this.currentUser.id,this.currentUser),console.log("UserManager: User created and added to map:",this.currentUser);const t=document.getElementById("current-user-name");return t?(t.value=this.currentUser.name,console.log("UserManager: Name input field updated")):console.warn("UserManager: Name input field not found"),console.log("UserManager: Initialization complete"),this.currentUser}catch(e){throw console.error("UserManager: Failed to initialize:",e),e}}generateUserId(){return"user_"+Math.random().toString(36).substr(2,9)}generatePseudonym(){const e=["Anonymous","Bright","Swift","Clever","Gentle","Bold","Quick","Silent","Wise","Brave"],t=["Hawk","Wolf","Tiger","Eagle","Bear","Lion","Fox","Deer","Owl","Cat"],o=Math.floor(1e3*Math.random());return`${e[Math.floor(Math.random()*e.length)]}${t[Math.floor(Math.random()*t.length)]}${o}`}updateUserName(e){return this.currentUser?e&&""!==e.trim()?(this.currentUser.name=e.trim(),this.users.set(this.currentUser.id,this.currentUser),localStorage.setItem("user_name",e.trim()),this.currentUser):null:(console.error("Cannot update user name: currentUser is null"),null)}addLocation(e){return this.currentUser?(this.currentUser.locations.push(e),this.users.set(this.currentUser.id,this.currentUser),this.currentUser):(console.error("Cannot add location: currentUser is null"),null)}removeLocation(e){return this.currentUser&&this.currentUser.locations[e]?(this.currentUser.locations.splice(e,1),this.users.set(this.currentUser.id,this.currentUser),this.currentUser):(console.error("Cannot remove location: invalid index or currentUser is null"),null)}updateUser(e){return!(!e||e.id===this.currentUser?.id||(this.users.set(e.id,e),0))}removeUser(e){if(this.users.has(e)){const t=this.users.get(e);return this.users.delete(e),this.connectionStatuses.delete(e),t}return null}setConnectionStatus(e,t){this.connectionStatuses.set(e,t)}getConnectionStatus(e){return this.connectionStatuses.get(e)||"offline"}getAllUsers(){return Array.from(this.users.values())}getAllLocations(){const e=[];return this.users.forEach(t=>{e.push(...t.locations)}),e}findUserByPeerId(e){for(const[t,o]of this.users.entries())if(o.peerId===e)return{userId:t,user:o};return null}setPeerId(e){this.currentUser&&(this.currentUser.peerId=e,this.users.set(this.currentUser.id,this.currentUser))}getCurrentUser(){return this.currentUser}isCurrentUser(e){return this.currentUser&&this.currentUser.id===e}}class MapsService{constructor(){this.geocodeCache=new Map,this.googleMapsLoaded=!1,this.autocompleteService=null,this.placesService=null,this.map=null,this.markers=[],this.apiKey="AIzaSyAyUHqKt9DHK_8ZvD8X-PoQdKcN1MY_zJM"}initGoogleMaps(){return this.googleMapsLoaded=!0,window.google&&window.google.maps&&window.google.maps.places?(this.autocompleteService=new google.maps.places.AutocompleteService,this.initializeMap(),console.log("Google Maps API loaded successfully"),!0):(console.error("Google Maps API not available"),!1)}initializeMap(){const e=document.getElementById("map");e?(this.map=new google.maps.Map(e,{zoom:4,center:{lat:39.8283,lng:-98.5795},mapTypeId:google.maps.MapTypeId.ROADMAP,styles:[{featureType:"poi",elementType:"labels",stylers:[{visibility:"off"}]}]}),this.placesService=new google.maps.places.PlacesService(this.map),console.log("Map initialized successfully")):console.error("Map element not found")}addMarker(e,t,o="user",s=null){if(!this.map)return null;let n,r;switch(o){case"current-user":n="https://maps.google.com/mapfiles/ms/icons/blue-dot.png",r="#2563eb";break;case"user":default:n="https://maps.google.com/mapfiles/ms/icons/red-dot.png",r="#ef4444";break;case"midpoint":n="https://maps.google.com/mapfiles/ms/icons/green-dot.png",r="#10b981"}const a=new google.maps.Marker({position:{lat:e.lat,lng:e.lng},map:this.map,title:t,icon:n}),i=new google.maps.InfoWindow({content:`\n                <div style="padding: 8px;">\n                    <h4 style="margin: 0 0 4px 0; color: ${r};">${t}</h4>\n                    <p style="margin: 0; font-size: 12px; color: #666;">\n                        ${e.address||`${e.lat.toFixed(4)}, ${e.lng.toFixed(4)}`}\n                    </p>\n                </div>\n            `});a.addListener("click",()=>{this.markers.forEach(e=>{e.infoWindow&&e.infoWindow.close()}),i.open(this.map,a)});const l={marker:a,infoWindow:i,type:o,user:s,location:e};return this.markers.push(l),l}clearMarkers(e=null){this.markers=this.markers.filter(t=>null!==e&&t.type!==e||(t.marker.setMap(null),!1))}updateMapView(e){if(!this.map||!e||0===e.length)return;const t=new google.maps.LatLngBounds;e.forEach(e=>{t.extend(new google.maps.LatLng(e.lat,e.lng))}),this.map.fitBounds(t),google.maps.event.addListenerOnce(this.map,"bounds_changed",()=>{this.map.getZoom()>15&&this.map.setZoom(15)})}async geocodeAddress(e){try{if(this.geocodeCache.has(e))return this.geocodeCache.get(e);const t=await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(e)}&key=${this.apiKey}`),o=await t.json();if(o.results&&o.results.length>0){const t=o.results[0],s={lat:t.geometry.location.lat,lng:t.geometry.location.lng,address:t.formatted_address};return this.geocodeCache.set(e,s),s}return null}catch(e){return console.error("Geocoding error:",e),null}}calculateMidpoint(e){if(!e||0===e.length)return null;const t=e.reduce((e,t)=>e+t.lat,0),o=e.reduce((e,t)=>e+t.lng,0);return{lat:t/e.length,lng:o/e.length}}async fetchPOIs(e){return e?this.placesService?window.google&&window.google.maps?new Promise((t,o)=>{try{const o={location:new google.maps.LatLng(e.lat,e.lng),radius:5e3,types:["restaurant","cafe","bar"]};this.placesService.nearbySearch(o,(e,o)=>{try{if(o===google.maps.places.PlacesServiceStatus.OK&&e){const o=e.map(e=>({id:e.place_id,name:e.name,address:e.vicinity||e.formatted_address,rating:e.rating||0,priceLevel:e.price_level||0,category:this.categorizePOI(e.types||[]),isOpen:e.opening_hours?e.opening_hours.open_now:null,location:{lat:e.geometry.location.lat(),lng:e.geometry.location.lng()}}));console.log(`Found ${o.length} POIs`),t(o)}else console.log("Places API status:",o),t([])}catch(e){console.error("Error processing Places API results:",e),t([])}})}catch(e){console.error("Error calling Places API:",e),t([])}}):(console.log("Google Maps not loaded yet"),[]):(console.log("Places service not ready yet"),[]):(console.log("No midpoint provided for POI search"),[])}categorizePOI(e){return e.includes("restaurant")?"restaurant":e.includes("meal_takeaway")||e.includes("food")||e.includes("meal_delivery")?"fast_food":e.includes("cafe")||e.includes("bakery")?"cafe":e.includes("bar")||e.includes("night_club")||e.includes("liquor_store")?"bar":"other"}getAutocompletePredictions(e){return new Promise((t,o)=>{this.autocompleteService?this.autocompleteService.getPlacePredictions({input:e,types:["establishment","geocode"]},(e,s)=>{s===google.maps.places.PlacesServiceStatus.OK&&e?t(e):o(new Error(`Autocomplete failed: ${s}`))}):o(new Error("Autocomplete service not available"))})}openPOIInMaps(e){const t=`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(e.name+" "+e.address)}`;window.open(t,"_blank")}}class UIManager{constructor(e,t){this.userManager=e,this.mapsService=t,this.midpoint=null,this.pois=[],this.autocompleteInputs=new Set}updateUserList(){const e=document.getElementById("participants-list"),t=document.getElementById("participants-count"),o=document.getElementById("participants-number");if(!e)return;const s=this.userManager.getAllUsers(),n=s.length;t&&(t.textContent=`${n} connected`),o&&(o.textContent=n),0===n?e.innerHTML='<p class="participants-empty">No participants yet</p>':(e.innerHTML="",s.forEach((t,o)=>{const s=this.userManager.isCurrentUser(o),n=this.createParticipantElement(t,s);e.appendChild(n)}))}createParticipantElement(e,t){const o=document.createElement("div");o.className="participant-item "+(t?"current-participant":"");const s=document.createElement("div");s.className="participant-name",s.textContent=e.name;const n=document.createElement("div");if(n.className="participant-locations",e.locations&&e.locations.length>0)e.locations.forEach((e,o)=>{const s=document.createElement("div");s.className="participant-location",s.style.display="flex",s.style.justifyContent="space-between",s.style.alignItems="center";const r=document.createElement("span");if(r.textContent=e.address,s.appendChild(r),t){const e=document.createElement("button");e.textContent="x",e.className="location-remove-btn",e.style.cssText="\n                        background: #dc2626;\n                        color: white;\n                        border: none;\n                        border-radius: 50%;\n                        width: 20px;\n                        height: 20px;\n                        cursor: pointer;\n                        font-size: 14px;\n                        line-height: 1;\n                        margin-left: 8px;\n                        flex-shrink: 0;\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                    ",e.addEventListener("mouseenter",()=>{e.style.background="#dc2626"}),e.addEventListener("mouseleave",()=>{e.style.background="#ef4444"}),e.addEventListener("click",()=>{this.handleRemoveLocation(o)}),s.appendChild(e)}n.appendChild(s)});else{const e=document.createElement("div");e.className="participant-location empty",e.textContent="No location set",n.appendChild(e)}return o.appendChild(s),o.appendChild(n),o}createUserElement(e,t){const o=document.createElement("div");o.className="user-item "+(t?"current-user":"");const s=document.createElement("div");s.className="user-info";const n=document.createElement("div");n.style.display="flex",n.style.justifyContent="space-between",n.style.alignItems="center";const r=document.createElement("div");if(r.className="user-name-display",r.textContent=e.name,r.style.padding="0.5rem",r.style.fontWeight="600",t&&(r.style.cursor="pointer",r.style.border="1px dashed transparent",r.style.borderRadius="0.25rem",r.title="Click to edit your name",r.addEventListener("click",()=>{this.makeNameEditable(r,e)}),r.addEventListener("mouseenter",()=>{r.style.borderColor="var(--primary-color)",r.style.backgroundColor="var(--background-color)"}),r.addEventListener("mouseleave",()=>{r.style.borderColor="transparent",r.style.backgroundColor="transparent"})),!t){const t=document.createElement("div");t.className="connection-status";const o=this.userManager.getConnectionStatus(e.id);t.textContent="connected"===o?"🟢":"connecting"===o?"🟡":"🔴",t.title=`Connection: ${o}`,t.style.fontSize="0.75rem",n.appendChild(t)}const a=document.createElement("div");if(a.className="user-locations-display",e.locations.forEach(e=>{const t=document.createElement("div");t.className="location-display",t.textContent=e.address||`${e.lat.toFixed(4)}, ${e.lng.toFixed(4)}`,t.style.fontSize="0.875rem",t.style.color="var(--text-secondary)",t.style.padding="0.25rem 0.5rem",a.appendChild(t)}),n.appendChild(r),s.appendChild(n),s.appendChild(a),o.appendChild(s),t){const e=this.createUserControls();o.appendChild(e)}return o}createUserControls(){const e=document.createElement("div");e.innerHTML='\n            <div class="user-locations">\n                <div class="location-item">\n                    <button class="location-btn" id="current-location-btn-dynamic">\n                        📍 Use Current Location\n                    </button>\n                </div>\n                <div class="location-item" style="position: relative;">\n                    <input type="text" class="location-input-dynamic" placeholder="Enter address..." \n                           aria-label="Enter address">\n                    <button class="add-location-btn-dynamic">+</button>\n                </div>\n            </div>\n        ';const t=e.querySelector("#current-location-btn-dynamic"),o=e.querySelector(".location-input-dynamic"),s=e.querySelector(".add-location-btn-dynamic");return t&&t.addEventListener("click",()=>this.handleCurrentLocation()),s&&s.addEventListener("click",()=>this.handleAddManualLocation(o)),o&&(o.addEventListener("keypress",e=>{"Enter"===e.key&&this.handleAddManualLocation(o)}),this.mapsService.googleMapsLoaded&&this.addAutocompleteToInput(o)),e}async handleCurrentLocation(){if(navigator.geolocation){this.showToast("Getting your location...","info");try{const e=await new Promise((e,t)=>{navigator.geolocation.getCurrentPosition(e,t)}),t={lat:e.coords.latitude,lng:e.coords.longitude,address:"Current Location"},o=this.userManager.addLocation(t);o&&(this.updateUserList(),this.updateMapDisplay(),this.showToast("Location added successfully!","success"),this.dispatchUserUpdate(o))}catch(e){let t="Failed to get location: ";switch(e.code){case e.PERMISSION_DENIED:t+="Permission denied";break;case e.POSITION_UNAVAILABLE:t+="Position unavailable";break;case e.TIMEOUT:t+="Request timeout";break;default:t+="Unknown error"}this.showToast(t,"error")}}else this.showToast("Geolocation is not supported by this browser.","error")}async handleAddManualLocation(e){if(!e)return void this.showToast("Could not find input field","error");const t=e.value.trim();if(t)try{this.showToast("Looking up address...","info");const o=await this.mapsService.geocodeAddress(t);if(o){const t=this.userManager.addLocation(o);t&&(e.value="",this.updateUserList(),this.updateMapDisplay(),this.showToast("Location added successfully!","success"),this.dispatchUserUpdate(t))}else this.showToast("Address not found","error")}catch(e){console.error("Geocoding error:",e),this.showToast("Failed to geocode address","error")}else this.showToast("Please enter an address","warning")}updateMapDisplay(){const e=this.userManager.getAllLocations();if(this.midpoint=this.mapsService.calculateMidpoint(e),this.mapsService.clearMarkers(),0===e.length)return this.pois=[],void this.updatePOIsList();const t=this.userManager.currentUser;if(this.userManager.getAllUsers().forEach(e=>{e.locations.forEach(o=>{const s=e.id===t.id,n=s?"current-user":"user",r=s?`You: ${o.address}`:`${e.name}: ${o.address}`;this.mapsService.addMarker(o,r,n,e)})}),this.midpoint){this.mapsService.addMarker(this.midpoint,"Midpoint","midpoint");const t=[...e,this.midpoint];this.mapsService.updateMapView(t),setTimeout(()=>{this.fetchAndDisplayPOIs()},500)}else this.mapsService.updateMapView(e)}async fetchAndDisplayPOIs(){if(!this.midpoint)return this.pois=[],void this.updatePOIsList();try{console.log("Fetching POIs for midpoint:",this.midpoint),this.pois=await this.mapsService.fetchPOIs(this.midpoint),console.log("POIs fetched:",this.pois.length),this.updatePOIsList()}catch(e){console.error("Error fetching POIs:",e),this.pois=[],this.updatePOIsList()}}updatePOIsList(e=null){const t=document.getElementById("pois-list"),o=document.getElementById("pois-count"),s=document.getElementById("pois-filters");if(!t)return void console.error("POI list element not found");const n=e||this.pois;if(console.log("Updating POI list with",n.length,"POIs"),o&&(o.textContent=n.length),s&&(s.style.display=this.pois.length>0?"block":"none"),this.setupFilterEventListener(),0===n.length)return void(t.innerHTML='<p class="pois-empty">No places found matching your criteria</p>');t.innerHTML="";const r=n.reduce((e,t)=>{const o=t.category||"other";return e[o]||(e[o]=[]),e[o].push(t),e},{});Object.entries(r).forEach(([e,o])=>{const s=this.createCategorySection(e,o);t.appendChild(s)}),console.log("POI list updated successfully with",Object.keys(r).length,"categories")}createPOIElement(e){const t=document.createElement("div");t.className="poi-item";const o=document.createElement("div");o.className="poi-info";const s=document.createElement("div");s.className="poi-name",s.textContent=e.name;const n=document.createElement("div");n.className="poi-address",n.textContent=e.address;const r=document.createElement("div");if(r.className="poi-details",e.rating&&e.rating>0){const t=document.createElement("span");t.className="poi-rating",t.textContent=`⭐ ${e.rating.toFixed(1)}`,r.appendChild(t)}if(e.priceLevel&&e.priceLevel>0){const t=document.createElement("span");t.className="poi-price",t.textContent="$".repeat(e.priceLevel),r.appendChild(t)}return o.appendChild(s),o.appendChild(n),o.appendChild(r),t.addEventListener("click",()=>{this.mapsService.openPOIInMaps(e)}),t.appendChild(o),t}createCategorySection(e,t){const o=document.createElement("div");o.className="category-section";const s=document.createElement("div");s.className="category-header";const n=document.createElement("h4");n.textContent=`${{restaurant:"Restaurants",cafe:"Cafes",bar:"Bars"}[e]||e} (${t.length})`,s.appendChild(n);const r=document.createElement("div");return r.className="category-content",t.forEach(e=>{const t=this.createPOIElement(e);r.appendChild(t)}),o.appendChild(s),o.appendChild(r),o}filterPOIs(){const e=document.getElementById("category-filter"),t=document.getElementById("open-now-filter");if(!e||!t)return;let o=this.pois;e.value&&(o=o.filter(t=>t.category===e.value)),t.checked&&(o=o.filter(e=>!0===e.isOpen)),this.updatePOIsList(o)}setupFilterEventListener(){const e=document.getElementById("category-filter"),t=document.getElementById("open-now-filter");e&&!e.hasAttribute("data-listener-added")&&(e.setAttribute("data-listener-added","true"),e.addEventListener("change",()=>{this.filterPOIs()})),t&&!t.hasAttribute("data-listener-added")&&(t.setAttribute("data-listener-added","true"),t.addEventListener("change",()=>{this.filterPOIs()}))}addAutocompleteToInput(e){if(this.mapsService.googleMapsLoaded&&!this.autocompleteInputs.has(e))if(console.log("Adding autocomplete to input:",e),this.autocompleteInputs.add(e),window.google&&window.google.maps&&window.google.maps.places){const t=new google.maps.places.Autocomplete(e,{types:["geocode","establishment"],fields:["formatted_address","geometry","name","types"]});t.addListener("place_changed",()=>{const o=t.getPlace();if(o.geometry){console.log("Place selected:",o.formatted_address||o.name);const t=o.name&&o.types&&o.types.includes("establishment")?o.name:o.formatted_address,s={lat:o.geometry.location.lat(),lng:o.geometry.location.lng(),address:t||o.formatted_address},n=this.userManager.addLocation(s);n&&(this.updateUserList(),this.updateMapDisplay(),this.showToast("Location added successfully!","success"),e.value="",this.dispatchUserUpdate(n))}else console.log("No geometry found for place")}),console.log("Google Maps autocomplete initialized")}else console.error("Google Maps Places API not available");else console.log("Autocomplete not ready:",{googleMapsLoaded:this.mapsService.googleMapsLoaded,alreadyHasInput:this.autocompleteInputs.has(e)})}handleRemoveLocation(e){console.log("Removing location at index:",e);const t=this.userManager.removeLocation(e);t?(console.log("Location removed successfully, updating UI"),this.updateUserList(),this.updateMapDisplay(),this.showToast("Location removed successfully!","success"),this.dispatchUserUpdate(t)):(console.error("Failed to remove location"),this.showToast("Failed to remove location","error"))}setupAutocompleteForExistingInputs(){document.querySelectorAll(".location-input, .location-input-dynamic").forEach(e=>{this.addAutocompleteToInput(e)})}showToast(e,t="info"){const o=document.getElementById("toast-container");if(!o)return;const s=document.createElement("div");s.className=`toast ${t}`,s.textContent=e,o.appendChild(s),setTimeout(()=>{s.parentNode&&s.remove()},5e3)}dispatchUserUpdate(e){window.dispatchEvent(new CustomEvent("userUpdated",{detail:e}))}updateConnectionStatus(e,t){this.userManager.setConnectionStatus(e,t),this.updateUserList()}handleUserUpdate(e){this.userManager.updateUser(e)&&(this.updateUserList(),this.updateMapDisplay())}handleUserLeft(e){const t=this.userManager.removeUser(e);t&&(this.updateUserList(),this.updateMapDisplay(),this.showToast(`${t.name} left the room`,"info"))}makeNameEditable(e,t){const o=t.name,s=document.createElement("input");s.type="text",s.value=o,s.style.width="100%",s.style.padding="0.5rem",s.style.border="1px solid var(--primary-color)",s.style.borderRadius="0.25rem",s.style.fontSize="inherit",s.style.fontWeight="inherit",s.style.backgroundColor="var(--background-color)",s.style.color="var(--text-color)",e.textContent="",e.appendChild(s),e.style.padding="0",s.focus(),s.select();const finishEditing=()=>{const t=s.value.trim();if(t&&t!==o){const e=this.userManager.updateUserName(t);e&&(this.updateUserList(),this.dispatchUserUpdate(e),this.showToast("Name updated!","success"))}else e.textContent=o,e.style.padding="0.5rem"};s.addEventListener("blur",finishEditing),s.addEventListener("keypress",t=>{"Enter"===t.key?finishEditing():"Escape"===t.key&&(e.textContent=o,e.style.padding="0.5rem")})}}class WebRTCManager{constructor(e,t,o){this.roomManager=e,this.userManager=t,this.uiManager=o,this.peer=null,this.connections=new Map,this.roomPeers=new Set,this.discoveryChannel=null,this.rtcConfiguration={iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:"stun:stun1.l.google.com:19302"},{urls:"turn:openrelay.metered.ca:80",username:"openrelayproject",credential:"openrelayproject"},{urls:"turn:openrelay.metered.ca:443",username:"openrelayproject",credential:"openrelayproject"}]}}async initialize(){if(!window.Peer)return console.error("PeerJS not loaded"),this.uiManager.showToast("PeerJS library not loaded","error"),!1;if(!this.roomManager.roomId||!this.userManager.currentUser?.id)return console.error("WebRTC: Cannot initialize - missing room ID or user ID"),console.error("Room ID:",this.roomManager.roomId),console.error("User ID:",this.userManager.currentUser?.id),this.uiManager.showToast("Failed to initialize connection - invalid room or user","error"),!1;const e=await this.findNextAvailablePeerIndex(),t=`${this.roomManager.roomId}_${e}`;return console.log("WebRTC: Initializing peer with sequential ID:",t),console.log("WebRTC: Room ID:",this.roomManager.roomId),console.log("WebRTC: Peer Index:",e),this.peerIndex=e,this.peer=new Peer(t,{config:this.rtcConfiguration}),this.setupPeerEventHandlers(),!0}async findNextAvailablePeerIndex(){console.log("WebRTC: Finding next available peer index...");for(let e=0;e<12;e++){const t=`${this.roomManager.roomId}_${e}`;if(console.log(`Testing if peer index ${e} is available (${t})...`),await this.testPeerAvailability(t))return console.log(`Peer index ${e} is available!`),e;console.log(`Peer index ${e} is taken, trying next...`)}return console.warn("All sequential slots taken, using random high index"),Math.floor(1e3*Math.random())+100}testPeerAvailability(e){return new Promise(t=>{console.log(`Testing availability of peer: ${e}`);const o=new Peer(e,{config:this.rtcConfiguration}),s=setTimeout(()=>{o.destroy(),t(!1)},2e3);o.on("open",()=>{console.log(`Peer ID ${e} is available!`),clearTimeout(s),o.destroy(),t(!0)}),o.on("error",n=>{console.log(`Peer ID ${e} is taken:`,n.type),clearTimeout(s),o.destroy(),t(!1)})})}setupPeerEventHandlers(){this.peer.on("open",e=>{console.log("Peer connected with ID:",e),this.userManager.setPeerId(e),this.roomManager.setCurrentPeerId(e),this.uiManager.showToast("Connected to peer network","success"),this.joinRoom()}),this.peer.on("connection",e=>{console.log("Incoming connection from:",e.peer),this.handleIncomingConnection(e)}),this.peer.on("disconnected",()=>{console.log("Peer disconnected"),this.uiManager.showToast("Disconnected from peer network","warning")}),this.peer.on("error",e=>{console.error("Peer error:",e),setTimeout(()=>{this.reconnectPeer()},3e3)})}reconnectPeer(){this.peer&&!this.peer.destroyed?this.peer.reconnect():this.initialize()}joinRoom(){console.log("WebRTC: Joining room with sequential peer discovery..."),console.log("My peer index:",this.peerIndex),this.connectToExistingPeers(),0===this.peerIndex?(console.log("I am peer 0 - becoming the host"),this.becomeHost()):(console.log(`I am peer ${this.peerIndex} - joining existing room`),this.uiManager.showToast(`Joined as ${this.userManager.currentUser.name}`,"info"))}connectToExistingPeers(){console.log("Connecting to existing peers with lower indexes...");for(let e=0;e<this.peerIndex;e++){const t=`${this.roomManager.roomId}_${e}`;console.log(`Connecting to peer ${e}: ${t}`),this.connectToPeer(t)}for(let e=this.peerIndex+1;e<12;e++){const t=`${this.roomManager.roomId}_${e}`;console.log(`Checking for higher index peer ${e}: ${t}`),this.connectToPeer(t)}}connectToPeer(e){if(e===this.peer.id||this.connections.has(e))return;console.log("Attempting connection to peer:",e);const t=this.peer.connect(e);t.on("open",()=>{console.log("Successfully connected to peer:",e),this.handleConnection(t,e),this.roomPeers.add(e),t.send({type:"join-room",user:this.userManager.currentUser})}),t.on("error",e=>{})}becomeHost(){this.roomManager.becomeHost(this.peer.id),this.roomPeers.add(this.peer.id),this.uiManager.showToast("You are the room host","info"),console.log("Became host of room:",this.roomManager.roomId),console.log("Current peers in room:",Array.from(this.roomPeers))}connectToHost(e){console.log("Connecting to host:",e);const t=this.peer.connect(e);t.on("open",()=>{console.log("Connected to host"),this.handleConnection(t,e),t.send({type:"join-room",user:this.userManager.currentUser})}),t.on("error",e=>{console.error("Failed to connect to host:",e),this.uiManager.showToast("Failed to connect to room host","error"),setTimeout(()=>{this.becomeHost()},2e3)})}handleIncomingConnection(e){e.on("open",()=>{this.handleConnection(e,e.peer)})}handleConnection(e,t){this.connections.set(t,e);const o=this.userManager.findUserByPeerId(t);o&&this.uiManager.updateConnectionStatus(o.userId,"connected"),e.on("data",e=>{this.handlePeerMessage(e,t)}),e.on("close",()=>{console.log("Connection closed:",t),this.connections.delete(t);const e=this.userManager.findUserByPeerId(t);e&&this.uiManager.updateConnectionStatus(e.userId,"disconnected")}),e.on("error",e=>{console.error("Connection error:",e),this.connections.delete(t);const o=this.userManager.findUserByPeerId(t);o&&this.uiManager.updateConnectionStatus(o.userId,"error")})}handlePeerMessage(e,t){switch(console.log("Received message:",e,"from:",t),e.type){case"join-room":this.handleUserJoin(e.user,t);break;case"room-state":this.handleRoomState(e.roomState);break;case"user-update":this.handleUserUpdate(e.user);break;case"room-title-update":this.handleRoomTitleUpdate(e.title);break;case"user-leaving":this.handleUserLeaving(e.userId);break;case"peer-list":this.handlePeerList(e.peers)}}handleUserJoin(e,t){e.peerId=t,this.userManager.updateUser(e),this.roomManager.saveRoomToStorage(this.userManager.getAllUsers()),this.uiManager.updateUserList(),this.uiManager.updateMapDisplay();const o=this.connections.get(t);o&&o.send({type:"room-state",roomState:{title:this.roomManager.roomData.title,users:this.userManager.getAllUsers()}}),this.broadcastToAll({type:"user-update",user:e},t);const s=this.userManager.getAllUsers().filter(t=>t.id!==e.id&&t.peerId).map(e=>e.peerId);s.length>0&&o.send({type:"peer-list",peers:s}),this.uiManager.showToast(`${e.name} joined the room`,"info")}handleRoomState(e){const t=document.getElementById("room-title");t&&(t.value=e.title),this.roomManager.roomData.title=e.title,this.userManager.users.clear(),e.users.forEach(e=>{this.userManager.users.set(e.id,e),e.id!==this.userManager.currentUser.id&&this.uiManager.updateConnectionStatus(e.id,"connected")}),this.uiManager.updateUserList(),this.uiManager.updateMapDisplay(),this.roomManager.saveRoomToStorage(this.userManager.getAllUsers())}handleUserUpdate(e){this.uiManager.handleUserUpdate(e),this.roomManager.saveRoomToStorage(this.userManager.getAllUsers())}handleRoomTitleUpdate(e){const t=document.getElementById("room-title");t&&(t.value=e),this.roomManager.roomData.title=e,this.roomManager.saveRoomToStorage(this.userManager.getAllUsers())}handleUserLeaving(e){this.uiManager.handleUserLeft(e),this.roomManager.saveRoomToStorage(this.userManager.getAllUsers())}handlePeerList(e){e.forEach(e=>{if(e!==this.peer.id&&!this.connections.has(e)){const t=this.peer.connect(e);t.on("open",()=>{this.handleConnection(t,e),t.send({type:"user-update",user:this.userManager.currentUser})})}})}broadcastToAll(e,t=null){this.connections.forEach((o,s)=>{if(s!==t&&o.open)try{o.send(e)}catch(e){console.error("Failed to send message to",s,e)}})}broadcastUserUpdate(e){this.broadcastToAll({type:"user-update",user:e}),this.roomManager.saveRoomToStorage(this.userManager.getAllUsers())}broadcastRoomTitleUpdate(e){this.broadcastToAll({type:"room-title-update",title:e})}notifyUserLeaving(){this.userManager.currentUser&&this.broadcastToAll({type:"user-leaving",userId:this.userManager.currentUser.id})}}class HalfwayApp{constructor(){this.router=new Router,this.roomManager=new RoomManager,this.userManager=new UserManager,this.mapsService=new MapsService,this.uiManager=new UIManager(this.userManager,this.mapsService),this.webrtcManager=new WebRTCManager(this.roomManager,this.userManager,this.uiManager),this.initialized=!1}async init(){try{if(console.log("Initializing Halfway.ing app..."),console.log("Current URL:",window.location.href),console.log("Current Path:",window.location.pathname),console.log("Step 1: Initializing room manager..."),this.roomManager.initialize(),console.log("✓ Room manager initialized. Room ID:",this.roomManager.roomId),console.log("Step 2: Initializing user manager..."),this.userManager.initialize(),console.log("✓ User manager initialized. User:",this.userManager.currentUser),!this.roomManager.roomId)throw new Error("Room ID not properly initialized");if(!this.userManager.currentUser)throw new Error("Current user not properly initialized");console.log("Step 3: Setting up UI..."),this.uiManager.updateUserList(),this.uiManager.updateMapDisplay(),console.log("Step 4: Setting up event listeners..."),this.setupEventListeners(),console.log("Step 5: Setting up themes..."),this.setupThemeToggle(),this.loadSavedTheme(),console.log("Step 6: Initializing WebRTC..."),setTimeout(async()=>{try{await this.webrtcManager.initialize()?console.log("✓ WebRTC manager initialized successfully"):console.error("✗ WebRTC manager failed to initialize")}catch(e){console.error("✗ WebRTC initialization error:",e)}},100),this.initialized=!0,console.log("✓ App initialization complete")}catch(e){console.error("✗ Failed to initialize app:",e),this.uiManager&&this.uiManager.showToast("Failed to initialize application: "+e.message,"error")}}setupEventListeners(){const e=document.getElementById("copy-url");e&&e.addEventListener("click",()=>{this.roomManager.copyRoomUrl().then(()=>this.uiManager.showToast("Room URL copied to clipboard!","success")).catch(()=>this.uiManager.showToast("Failed to copy URL","error"))});const t=document.getElementById("current-user-name");t&&t.addEventListener("input",e=>{const t=this.userManager.updateUserName(e.target.value);t&&(this.uiManager.updateUserList(),this.webrtcManager&&this.webrtcManager.broadcastUserUpdate(t))});const o=document.getElementById("current-location-btn");o&&o.addEventListener("click",()=>{this.uiManager.handleCurrentLocation()});const s=document.querySelector(".location-input");s&&s.addEventListener("keypress",e=>{"Enter"===e.key&&this.uiManager.handleAddManualLocation(s)});const n=document.getElementById("participants-toggle");n&&n.addEventListener("click",()=>{this.toggleParticipants()});const r=document.getElementById("pois-toggle");r&&r.addEventListener("click",()=>{this.togglePOIs()});const a=document.getElementById("theme-toggle");a&&a.addEventListener("click",()=>{this.toggleTheme()}),window.addEventListener("userUpdated",e=>{this.webrtcManager&&e.detail&&this.webrtcManager.broadcastUserUpdate(e.detail)}),document.addEventListener("visibilitychange",()=>{!document.hidden&&this.webrtcManager&&this.webrtcManager.peer&&this.webrtcManager.peer.disconnected&&this.webrtcManager.reconnectPeer()}),window.addEventListener("beforeunload",()=>{this.webrtcManager&&this.userManager.currentUser&&this.webrtcManager.notifyUserLeaving()})}initGoogleMaps(){if(this.mapsService.initGoogleMaps()){this.uiManager.setupAutocompleteForExistingInputs(),console.log("Google Maps initialized and autocomplete set up");const e=document.querySelector(".location-input");e&&this.uiManager.addAutocompleteToInput(e)}}setupThemeToggle(){const e=localStorage.getItem("theme")||"light";this.applyTheme(e),this.updateThemeIcon(e)}toggleTheme(){const e="light"===(document.documentElement.getAttribute("data-theme")||"light")?"dark":"light";this.applyTheme(e),this.updateThemeIcon(e),localStorage.setItem("theme",e)}applyTheme(e){document.documentElement.setAttribute("data-theme",e)}updateThemeIcon(e){const t=document.querySelector(".theme-icon");t&&(t.textContent="light"===e?"🌙":"☀️")}loadSavedTheme(){const e=localStorage.getItem("theme");e&&(this.applyTheme(e),this.updateThemeIcon(e))}toggleParticipants(){const e=document.getElementById("participants-toggle"),t=document.getElementById("participants-list");e&&t&&(e.classList.toggle("expanded"),e.classList.contains("expanded")?t.style.display="block":t.style.display="none")}togglePOIs(){const e=document.getElementById("pois-toggle"),t=document.getElementById("pois-list");e&&t&&(e.classList.toggle("expanded"),e.classList.contains("expanded")?t.style.display="block":t.style.display="none")}}